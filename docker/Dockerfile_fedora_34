FROM fedora:34

RUN dnf clean all

RUN dnf install -y dnf-command\(builddep\) rpmdevtools && \
    dnf install -y mock

RUN dnf groupinstall -y "X Software Development"

RUN dnf install -y \
        git \
        rpm-build \
        tar \
        make \
        autoconf \
        automake \
        nasm \
        cmake \
        speexdsp-devel \
        pulseaudio-libs-devel \
        libcanberra-devel \
        libcurl-devel \
        libtool \
        mesa-libgbm-devel \
        mesa-dri-drivers \
        dbus-devel \
        expat-devel \
        pcre-devel \
        yaml-cpp-devel \
        dbus-c++-devel \
        dbus-devel \
        libXext-devel \
        libXfixes-devel \
        yasm \
        speex-devel \
        gsm-devel \
        chrpath \
        check \
        astyle \
        uuid-c++-devel \
        gettext-devel \
        gcc-c++ \
        which \
        alsa-lib-devel \
        systemd-devel \
        libuuid-devel \
        uuid-devel \
        gnutls-devel \
        nettle-devel \
        opus-devel \
        patch \
        jsoncpp-devel \
        libnatpmp-devel \
        webkitgtk4-devel \
        cryptopp-devel \
        libva-devel \
        libvdpau-devel \
        msgpack-devel \
        NetworkManager-libnm-devel \
        openssl-devel \
        openssl-static \
        clutter-devel \
        clutter-gtk-devel \
        libappindicator-gtk3-devel \
        libnotify-devel \
        libupnp-devel \
        qrencode-devel \
        libargon2-devel \
        libsndfile-devel \
        libdrm \
        gperf \
        bison \
        clang \
        clang-devel \
        nodejs \
        flex \
        nss-devel \
        libxcb* \
        libxkb* \
        libX11-devel \
        libXrender-devel \
        xcb-util-* \
        python2.7 \
        xz \
        xkeyboard-config \
        libnotify \
        wget \
        libstdc++-static \
        sqlite-devel

RUN wget https://github.com/Kitware/CMake/releases/download/v3.19.8/cmake-3.19.8-Linux-x86_64.sh \
      -q -O /tmp/cmake-install.sh \
      && chmod u+x /tmp/cmake-install.sh \
      && mkdir /usr/bin/cmake \
      && /tmp/cmake-install.sh --skip-license --prefix=/usr/bin/cmake \
      && rm /tmp/cmake-install.sh

ENV PATH="/usr/bin/cmake/bin:${PATH}"

ADD scripts/build-package-rpm.sh /opt/build-package-rpm.sh

CMD ["/opt/build-package-rpm.sh"]
