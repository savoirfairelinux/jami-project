{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "404de23e_a2cfa82e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 892
      },
      "writtenOn": "2022-07-11T19:54:48Z",
      "side": 1,
      "message": "Okay, found the culprit: this customization I\u0027d recently added to my\nglobal git config:\n\n[init]\n\ttemplateDir \u003d ~/.config/git/template\n\nwhere the \u0027template\u0027 directory doesn\u0027t have any hooks directory.\n\nI don\u0027t think it\u0027s an invalid use-case, and I\u0027m kind of surprised that\ngit would completely omit the hooks directory (containing only sample\nhooks by default) in new inits.\n\nI guess I\u0027d be fine with abandoning this patch, but I could see\nsomeone else easily running into this and being confused.",
      "revId": "fac01c28795b2c22587c5aace64e69dfe7aeeec6",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8143ce08_a88dd3d5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 220
      },
      "writtenOn": "2022-07-11T20:04:52Z",
      "side": 1,
      "message": "Oh I see.\n\nA better fix I guess would be to have:\n\n        if not os.path.exists(hooks_dir):\n            os.makedirs(hooks_dir)\n        copy_file(\"./scripts/commit-msg\", hooks_dir + /commit-msg)\n\nSo an explicit paste (to havoir commit-msg as a file.\n\nand still got 2 loops cause if module_names_to_format contains something not in module_names, it\u0027s probably wrong.",
      "parentUuid": "404de23e_a2cfa82e",
      "revId": "fac01c28795b2c22587c5aace64e69dfe7aeeec6",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9df51bd_0e051f54",
        "filename": "build.py",
        "patchSetId": 1
      },
      "lineNbr": 401,
      "author": {
        "id": 220
      },
      "writtenOn": "2022-07-11T19:07:14Z",
      "side": 1,
      "message": "This should never be necessary.\na \"git init\" should create .git/hooks and git submodule should create .git/modules/name/hooks, and we should avoid to play with default directories in .git.\n\nFor me, if this is failing here, there is something wrong with the git binary.\n\nI don\u0027t seem to reproduce your issue directly on the build machines or my device.",
      "range": {
        "startLine": 400,
        "startChar": 34,
        "endLine": 401,
        "endChar": 34
      },
      "revId": "fac01c28795b2c22587c5aace64e69dfe7aeeec6",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9eb7e3dd_88014714",
        "filename": "build.py",
        "patchSetId": 1
      },
      "lineNbr": 405,
      "author": {
        "id": 220
      },
      "writtenOn": "2022-07-11T19:07:14Z",
      "side": 1,
      "message": "This may be problematic.\n\nif a name is not in modules, but in modules_names_to_format this is bad anyway and should not happen I guess.",
      "range": {
        "startLine": 403,
        "startChar": 19,
        "endLine": 405,
        "endChar": 30
      },
      "revId": "fac01c28795b2c22587c5aace64e69dfe7aeeec6",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    }
  ]
}